/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;


import Business.Enterprise.CDC;
import Business.Location.LocationCoordinates;
import Business.DiseaseList.Disease;
import Business.EcoSystem;
import Business.Network.StateNetwork;
import Business.Order.OrderRequest;
import Business.Organization.ClinicOrg;
import Business.Patient.Patient;
import Business.Patient.PatientList;
import Business.UserAccount.UserAccount;
import Business.VaccineDirectory.Blood;
import Business.VaccineDirectory.Vaccine;
import Business.VaccineDirectory.VaccineList;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.Maps.MapBrowser;

/**
 *
 * @author HarshithaApurvaNikhitha
 */
public class NewOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestNewOrderJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    ClinicOrg clinicOrg;
    StateNetwork stateNetwork;
    PatientList patientList;
    VaccineList vaccineList;
    LocationCoordinates locationCoordinates;

    public NewOrderJPanel(JPanel userProcessContainer, UserAccount account, ClinicOrg clinicOrg, StateNetwork stateNetwork, PatientList patientList, VaccineList vaccineList, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.clinicOrg = clinicOrg;
        this.stateNetwork = stateNetwork;
        this.patientList = patientList;
        this.vaccineList = vaccineList;
        locationCoordinates = new LocationCoordinates();
        //loadSupplierComboBox();
        loadPatientComboBox();
    }
    
    /*public void loadSupplierComboBox(){
        for (SupplierEnterprise supplierEnterprise: stateNetwork.getEnterprises().getSupplierEnterpriseList()) {
            for(Supplier supplier: supplierEnterprise.getSupplierList().getSupplierList()){
                if(supplier!= null){
                supplierListJComboBox.addItem(supplier);
                }
            }
        }
    }*/
    
    public void loadPatientComboBox(){
        patientListCombo.removeAllItems();
        for(Patient patient : patientList.getPatientList()){
            if(patient!= null){
            patientListCombo.addItem(patient);
            }
    }
    
    
    }
    
    public void loadVaccineComboBox(Disease disease){
    vaccineListCombo.removeAllItems();
        for(Vaccine vaccine: vaccineList.getVaccineList()){
  //  if(vaccine.getDiseaseUsedFor().equals(disease)){
    vaccineListCombo.addItem(vaccine);
   // }
    
    }
  //  vaccineListCombo.addItem("Blood pack Request");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reqLabel = new javax.swing.JLabel();
        vaccineLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        vaccineListCombo = new javax.swing.JComboBox();
        placeOrderBtn = new javax.swing.JButton();
        quantitySpinner = new javax.swing.JSpinner();
        patientLabel = new javax.swing.JLabel();
        patientListCombo = new javax.swing.JComboBox();
        quantitylabel = new javax.swing.JLabel();
        setLocationBtn = new javax.swing.JButton();
        presetLocationBtn = new javax.swing.JButton();
        emergencyBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reqLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        reqLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reqLabel.setText("Request New Order");
        add(reqLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 590, 41));

        vaccineLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        vaccineLabel.setText("Vaccine:");
        add(vaccineLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 160, 40));

        locationLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        locationLabel.setText("Location:");
        add(locationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 160, 40));

        vaccineListCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vaccineListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineListComboActionPerformed(evt);
            }
        });
        add(vaccineListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 210, 40));

        placeOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        placeOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        placeOrderBtn.setText("Place Order");
        placeOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderBtnActionPerformed(evt);
            }
        });
        add(placeOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 440, 170, 40));

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 200, 1));
        add(quantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 210, 40));

        patientLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        patientLabel.setText("Patient:");
        add(patientLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 160, 40));

        patientListCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        patientListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientListComboActionPerformed(evt);
            }
        });
        add(patientListCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 210, 40));

        quantitylabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        quantitylabel.setText("Quantity:");
        add(quantitylabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 160, 40));

        setLocationBtn.setBackground(new java.awt.Color(153, 153, 153));
        setLocationBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        setLocationBtn.setText("Set new location");
        setLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setLocationBtnActionPerformed(evt);
            }
        });
        add(setLocationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 210, 40));

        presetLocationBtn.setBackground(new java.awt.Color(153, 153, 153));
        presetLocationBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        presetLocationBtn.setText("Preset Location");
        presetLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetLocationBtnActionPerformed(evt);
            }
        });
        add(presetLocationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, 210, 40));

        emergencyBtn.setText("Emergency Order");
        emergencyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emergencyBtnActionPerformed(evt);
            }
        });
        add(emergencyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 399, 210, 40));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 110, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void placeOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderBtnActionPerformed
        // TODO add your handling code here:
        OrderRequest request = null;
        if(locationCoordinates ==null){
        JOptionPane.showMessageDialog(null,"Please set the locationCoordinates");
        return;
        }
        for(CDC enterprise: stateNetwork.getEnterpriseList().getCDCEnterpriseList()){
            request = enterprise.getOrderQueue().addOrderRequest();
        }
        if(vaccineListCombo.getSelectedItem()!="Blood pack Request"){
            request.setVaccine((Vaccine)vaccineListCombo.getSelectedItem());}
        
        else if(vaccineListCombo.getSelectedItem().toString().equals("Blood pack Request")){
            
            String bloodGroup = ((Patient)patientListCombo.getSelectedItem()).getPatientBloodGroup();
            Disease disease = ((Patient)patientListCombo.getSelectedItem()).getDisease();
            Blood blood = new Blood(bloodGroup,disease);     
            request.setVaccine(blood);
                }
        else{return;}
        request.setDestinationLocationCoordinates(locationCoordinates);
        request.setQuantity((Integer)quantitySpinner.getValue());
        request.setPatient((Patient)patientListCombo.getSelectedItem());
        request.setOrderSender(account);
        request.setOrderStatus("Order Placed");
//        
//        OrderRequest nextRequest = new OrderRequest();
//        
//        nextRequest.setOrderSender(account);
//        nextRequest.setOrderStatus("Order Placed");
//        request.assignOrderRequest(nextRequest);
        OrderRequest lastRequest = request.getLastOrderRequest();
            
        lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
        lastRequest.createAndGetNewOrderRequest().setOrderStatus("Order Placed");
        

        /*
        lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
        lastRequest.createAndGetNewOrderRequest().setOrderStatus("Order Placed");
        */
        JOptionPane.showMessageDialog(null,"Order placed successfully !");
        //Organization org = null;
        account.getOrderQueue().getOrderRequests().add(request);
    }//GEN-LAST:event_placeOrderBtnActionPerformed

    private void vaccineListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineListComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineListComboActionPerformed

    private void patientListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientListComboActionPerformed
        // TODO add your handling code here:
        if(patientListCombo.getSelectedItem() != null){
            Patient patient = (Patient)patientListCombo.getSelectedItem();
            Disease disease = patient.getDisease();
            loadVaccineComboBox(disease);
        }
    }//GEN-LAST:event_patientListComboActionPerformed

    private void setLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setLocationBtnActionPerformed
        // TODO add your handling code here:
        MapBrowser mapBrowser = new MapBrowser(userProcessContainer, locationCoordinates);
        userProcessContainer.add("MapBrowser", mapBrowser);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_setLocationBtnActionPerformed

    private void presetLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetLocationBtnActionPerformed
        // TODO add your handling code here:
        locationCoordinates = clinicOrg.getLocationCoordinates();
        
        
    }//GEN-LAST:event_presetLocationBtnActionPerformed

    private void emergencyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emergencyBtnActionPerformed
        OrderRequest request = null;
        if(locationCoordinates ==null){
            JOptionPane.showMessageDialog(null,"Please set the locationCoordinates");
            return;
        }
        
        
        for(CDC enterprise: stateNetwork.getEnterpriseList().getCDCEnterpriseList()){
            request = enterprise.getOrderQueue().addOrderRequest();
        }
        
        
//        if(vaccineListJComboBox.getSelectedItem()!="Blood pack Request"){
//            request.setVaccine((Vaccine)vaccineListJComboBox.getSelectedItem());}
//
//        else if(vaccineListJComboBox.getSelectedItem().toString().equals("Blood pack Request")){
//
//            String bloodGroup = ((Patient)patientListJComboBox.getSelectedItem()).getPatientBloodGroup();
//            Disease disease = ((Patient)patientListJComboBox.getSelectedItem()).getDisease();
//            Blood blood = new Blood(bloodGroup,disease);
//            request.setVaccine(blood);
//        }
//        else{return;}
//        request.setDestinationLocationCoordinates(locationCoordinates);
//        request.setQuantity((Integer)quantityJSpinner.getValue());
//        request.setPatient((Patient)patientListJComboBox.getSelectedItem());
//        request.setOrderSender(account);
//        request.setOrderStatus("Order Placed");
//        //
//        //        OrderRequest nextRequest = new OrderRequest();
//        //
//        //        nextRequest.setOrderSender(account);
//        //        nextRequest.setOrderStatus("Order Placed");
//        //        request.assignOrderRequest(nextRequest);
//        OrderRequest lastRequest = request.getLastOrderRequest();
//
//        lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
//        lastRequest.createAndGetNewOrderRequest().setOrderStatus("Order Placed");
//
//        /*
//        lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
//        lastRequest.createAndGetNewOrderRequest().setOrderStatus("Order Placed");
//        */
//        JOptionPane.showMessageDialog(null,"Order placed successfully !");
//        //Organization org = null;
//        account.getOrderQueue().getOrderRequests().add(request);
    }//GEN-LAST:event_emergencyBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton emergencyBtn;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel patientLabel;
    private javax.swing.JComboBox patientListCombo;
    private javax.swing.JButton placeOrderBtn;
    private javax.swing.JButton presetLocationBtn;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JLabel quantitylabel;
    private javax.swing.JLabel reqLabel;
    private javax.swing.JButton setLocationBtn;
    private javax.swing.JLabel vaccineLabel;
    private javax.swing.JComboBox vaccineListCombo;
    // End of variables declaration//GEN-END:variables
}
