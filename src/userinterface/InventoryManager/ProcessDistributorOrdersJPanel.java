/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InventoryManager;

import Business.Enterprise.Enterprise;
import Business.Enterprise.TravelAgencyEnterprise;
import Business.Inventory.InventoryDirectory;
import Business.Inventory.InventoryItem;
import Business.Network.StateNetwork;
import Business.Order.OrderQueue;
import Business.Order.OrderRequest;
import Business.Organization.InventoryManagementOrg;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.Doctor.TrackMyOrdersJPanel;

/**
 *
 * @author HarshithaApurvaNikhitha
 */
public class ProcessDistributorOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessDistributorOrdersJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    InventoryManagementOrg inventoryManagementOrg;
    Enterprise enterprise;
    StateNetwork stateNetwork;
    InventoryDirectory inventoryDirectory;
    OrderQueue orderQueue;
    public ProcessDistributorOrdersJPanel(JPanel userProcessContainer, UserAccount userAccount, InventoryManagementOrg inventoryManagementOrg,
                                          Enterprise enterprise, StateNetwork stateNetwork, OrderQueue orderQueue) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.inventoryManagementOrg = inventoryManagementOrg;
        this.enterprise = enterprise;
        this.stateNetwork = stateNetwork;
        this.inventoryDirectory = inventoryManagementOrg.getInventoryDirectory();
        this.orderQueue = orderQueue;
        populateJTable();
    }
    
    private void populateJTable(){
    DefaultTableModel model = (DefaultTableModel) workRequestTable.getModel();
        model.setRowCount(0);
        if(orderQueue != null){
            for(OrderRequest request : orderQueue.getOrderRequests()){
                Object[] row = new Object[5];
                row[0] = request.getVaccine().getVaccineName();
                row[1] = request.getQuantity();
                row[2] = request;
                row[3] = request.getOrderReceiver() == null ? null : request.getOrderReceiver().getEmployee().getEmployeeName();
                row[4] = request.getOrderStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        approveOrderBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        orderapprovalLabel = new javax.swing.JLabel();
        trackOrderBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Item", "Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 110, 750, 96));

        assignBtn.setBackground(new java.awt.Color(153, 153, 153));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, -1));

        approveOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        approveOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        approveOrderBtn.setText("Process");
        approveOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderBtnActionPerformed(evt);
            }
        });
        add(approveOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 310, -1, -1));

        refreshBtn.setBackground(new java.awt.Color(153, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, -1, -1));

        orderapprovalLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        orderapprovalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderapprovalLabel.setText("Manage Order Approvals");
        add(orderapprovalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 564, 41));

        trackOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        trackOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        trackOrderBtn.setText("Track Order");
        trackOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackOrderBtnActionPerformed(evt);
            }
        });
        add(trackOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, -1, -1));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 110, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        int selectedRow = workRequestTable.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
        OrderRequest orderRequest = (OrderRequest)workRequestTable.getValueAt(selectedRow, 2);
        System.out.println(orderRequest.getOrderSender().getUsername());
        OrderRequest lastOrderRequest = orderRequest.getLastOrderRequest();
        String status = lastOrderRequest.getOrderStatus();
        if(!status.equals("Processed")){
            InventoryItem inventoryItem = this.inventoryDirectory.getInventoryByVaccine(orderRequest.getVaccine());
            if( inventoryItem!= null && inventoryItem.checkQuantity(orderRequest.getQuantity())){
                lastOrderRequest.setOrderReceiver(userAccount);
                orderRequest.setOrderReceiver(userAccount);
                lastOrderRequest.setOrderStatus("Pending to be Processed!");
                orderRequest.setOrderStatus("Pending to be Processed by "+ inventoryManagementOrg.getOrgName());
            }
            else{
                JOptionPane.showMessageDialog(null, orderRequest.getVaccine().getVaccineName()+" stock does not exist!");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"This order is alrady processed!");
        }
        populateJTable();
    }//GEN-LAST:event_assignBtnActionPerformed

    private void approveOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderBtnActionPerformed
        
        int selectedRow = workRequestTable.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
        OrderRequest orderRequest1 = (OrderRequest)workRequestTable.getValueAt(selectedRow, 2);
        OrderRequest lastOrderRequest = orderRequest1.getLastOrderRequest();
        if(!orderRequest1.getOrderStatus().equals("Processed")){
            InventoryItem inventoryItem = this.inventoryDirectory.getInventoryByVaccine(orderRequest1.getVaccine());
            if(inventoryItem != null && inventoryItem.checkQuantity(orderRequest1.getQuantity())){
                lastOrderRequest.setOrderStatus("Completed");
                lastOrderRequest.setResolveDate();
                orderRequest1.setOrderReceiver(userAccount);
                inventoryItem.setQuantity(inventoryItem.getQuantity() - lastOrderRequest.getQuantity());
                for(TravelAgencyEnterprise travelAgencyEnterprise: stateNetwork.getEnterpriseList().getTravelAgencyEnterpriseList()){
                    OrderRequest orderRequest = travelAgencyEnterprise.getOrderQueue().addOrderRequest();
                    orderRequest = orderRequest1;
                    OrderRequest newOrderRequest = lastOrderRequest.createAndGetNewOrderRequest();
                    newOrderRequest.setOrderSender(userAccount);
                    newOrderRequest.setOrderStatus("Request sent for Package Delivery!");
                    orderRequest1.setOrderStatus("Request sent for Package Delivery "+travelAgencyEnterprise.getOrgName()+"!");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, orderRequest1.getVaccine().getVaccineName()+" is out of stock!");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Request is already processed");
        }
        populateJTable();
    }//GEN-LAST:event_approveOrderBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateJTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void trackOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackOrderBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row !");
            return;
        }
        OrderRequest request = (OrderRequest)workRequestTable.getValueAt(selectedRow, 2);
        TrackMyOrdersJPanel trackOrderJPanel = new TrackMyOrdersJPanel(userProcessContainer, request);
        userProcessContainer.add("TrackOrderJPanel", trackOrderJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_trackOrderBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveOrderBtn;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel orderapprovalLabel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton trackOrderBtn;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
