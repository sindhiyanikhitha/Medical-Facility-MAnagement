/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InventoryManager;


import Business.EcoSystem;
import Business.Enterprise.SupplierEnterprise;
import Business.Inventory.InventoryDirectory;
import Business.Inventory.InventoryItem;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Order.OrderRequest;
import Business.Organization.InventoryManagementOrg;
import Business.Organization.Organization;
import Business.Organization.SupplierOrg;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HarshithaApurvaNikhitha
 */
public class ViewDistributorInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDistributorInventoryJPanel
     */
    JPanel userProcessContainer;
    InventoryDirectory inventoryDirectory;
    InventoryManagementOrg inventoryManagementOrg;
    List<SupplierEnterprise> supplierEnterpriseList;
    UserAccount account;
    StateNetwork stateNetwork;
    CountryNetwork countryNetwork;
    EcoSystem ecoSystem;
    public ViewDistributorInventoryJPanel(JPanel userProcessContainer, UserAccount account, InventoryDirectory inventoryDirectory, InventoryManagementOrg inventoryManagementOrg, List<SupplierEnterprise> supplierEnterpriseList, StateNetwork stateNetwork, CountryNetwork countryNetwork, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.inventoryDirectory = inventoryDirectory;
        this.inventoryManagementOrg = inventoryManagementOrg;
        this.supplierEnterpriseList = supplierEnterpriseList;
        this.supplierCombo.addItem("select");
        this.account = account;
        this.countryNetwork = countryNetwork;
        this.stateNetwork = stateNetwork;
        this.ecoSystem = ecoSystem;
        populateTable();
        popSupplierEnterprise();
    }
    
    public void popSupplierEnterprise(){
        if( this.supplierEnterpriseList != null){
            for(SupplierEnterprise supplierEnterprise: this.supplierEnterpriseList){
                for(Organization supplierOrgnaization: supplierEnterprise.getOrganizationList().getOrganizationList()){
                    supplierCombo.addItem((SupplierOrg)supplierOrgnaization);
                }
            }
        }
    }
    
    public void popVaccineList(SupplierOrg supplierOrg){
        vaccineCombo.removeAllItems();
        if(supplierOrg != null){
            System.out.println(supplierOrg.getOrgName());
            for(InventoryItem inventoryItem: supplierOrg.getInventoryDirectory()){
                System.out.println(inventoryItem.getVaccine().getVaccineName());
                vaccineCombo.addItem(inventoryItem);
            }
        }
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) vaccineInventoryTable.getModel();
        int i =0;
        model.setRowCount(0);
        if(inventoryDirectory != null) {
            for (InventoryItem inventoryItem: inventoryDirectory.getInventoryList()){
                Object[] row = new Object[3];
                row[0] = ++i;
                row[1] = inventoryItem;
                row[2] = inventoryItem.getQuantity();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inventoryLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineInventoryTable = new javax.swing.JTable();
        submitBtn = new javax.swing.JButton();
        supplierCombo = new javax.swing.JComboBox();
        vaccineCombo = new javax.swing.JComboBox();
        supplierLabel = new javax.swing.JLabel();
        vaccineLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        qtySpinner = new javax.swing.JSpinner();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inventoryLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        inventoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inventoryLabel.setText("View Inventory");
        add(inventoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 598, 41));

        vaccineInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl No", "Vaccine Name", "Quantity Available"
            }
        ));
        jScrollPane1.setViewportView(vaccineInventoryTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 660, 196));

        submitBtn.setBackground(new java.awt.Color(153, 153, 153));
        submitBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitBtn.setText("Raise Request");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        add(submitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 170, 40));

        supplierCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboActionPerformed(evt);
            }
        });
        add(supplierCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 130, 30));

        add(vaccineCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 130, 30));

        supplierLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        supplierLabel.setText("Supplier:");
        add(supplierLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 100, 30));

        vaccineLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        vaccineLabel.setText("Vaccine:");
        add(vaccineLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 90, 30));

        quantityLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        quantityLabel.setText("Quantity");
        add(quantityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 90, 30));
        add(qtySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 130, 30));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, 110, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        if(supplierCombo.getSelectedIndex() >= -1 && vaccineCombo.getSelectedIndex() >= -1 ){
            SupplierOrg supplierOrg1 = (SupplierOrg) supplierCombo.getSelectedItem();
            if(vaccineCombo.getSelectedItem() == null){
                JOptionPane.showMessageDialog(null, "Please select a vaccine");
                return;
            }
            
            SupplierEnterprise supplierEnterprise1 = null;
            for(SupplierEnterprise supplierEnterprise:supplierEnterpriseList){
                if(supplierEnterprise.getOrganization(supplierOrg1) != null){
                    supplierEnterprise1 = supplierEnterprise;
                }
            }
            if(supplierEnterprise1 != null){
                InventoryItem inventoryItem1 = (InventoryItem) vaccineCombo.getSelectedItem();
                int qty = (int)qtySpinner.getValue();
                if(qty <= 0){
                    JOptionPane.showMessageDialog(null, "Please enter valid quantity.");
                    return;
                }
                OrderRequest orderRequest1 = supplierEnterprise1.getOrderQueue().addOrderRequest();
                orderRequest1.setOrderSender(account);
                orderRequest1.setQuantity(qty);
                orderRequest1.setVaccine(inventoryItem1.getVaccine());
                orderRequest1.setOrderStatus("Request sent");
                JOptionPane.showMessageDialog(null,"Successfully Sent!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Supplier distributor not found");
                return;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Select a Supplier");
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboActionPerformed
        if(supplierCombo.getSelectedIndex() > 0){
            SupplierOrg supplierOrg1 = (SupplierOrg)supplierCombo.getSelectedItem();
            
            vaccineCombo.removeAllItems();
            if(supplierOrg1 != null){
                for(InventoryItem inventoryItem: supplierOrg1.getInventoryDirectory()){
                    vaccineCombo.addItem(inventoryItem);
                }
            }
        }
    }//GEN-LAST:event_supplierComboActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel inventoryLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner qtySpinner;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JButton submitBtn;
    private javax.swing.JComboBox supplierCombo;
    private javax.swing.JLabel supplierLabel;
    private javax.swing.JComboBox vaccineCombo;
    private javax.swing.JTable vaccineInventoryTable;
    private javax.swing.JLabel vaccineLabel;
    // End of variables declaration//GEN-END:variables
}
