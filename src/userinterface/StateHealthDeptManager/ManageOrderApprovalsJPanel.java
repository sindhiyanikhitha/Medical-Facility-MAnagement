/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StateHealthDeptManager;


import Business.Enterprise.Distributor;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseTypeEnum.Distributor;
import Business.Enterprise.StateHealthDept;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.StateNetwork;
import Business.Order.OrderRequest;
import Business.Organization.InventoryManagementOrg;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.Supplier;
import Business.Organization.SHDOrg;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HarshithaApurvaNikhitha
 */
public class ManageOrderApprovalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrderApprovalsJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    SHDOrg shdOrg;
    StateHealthDept stateHealthDept;
    StateNetwork stateNetwork;

    public ManageOrderApprovalsJPanel(JPanel userProcessContainer, UserAccount account, SHDOrg shdOrg, StateHealthDept stateHealthDept, StateNetwork stateNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.shdOrg = shdOrg;
        this.stateHealthDept = stateHealthDept;
        this.stateNetwork = stateNetwork;
    }
    
    public void populateJTable(){
    
        
        DefaultTableModel defaultTableModel = (DefaultTableModel)workRequestTable.getModel();
        
        defaultTableModel.setRowCount(0);
        
        for(OrderRequest request : stateHealthDept.getOrderQueue().getOrderRequests()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getType();
            row[2] = request.getOrderSender().getEmployee().getEmployeeName();
            row[3] = request.getOrderReceiver() == null ? null : request.getOrderReceiver().getEmployee().getEmployeeName();
            row[4] = request.getOrderStatus();
            
            defaultTableModel.addRow(row);
        }
    
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        approveOrderBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        orderLabel = new javax.swing.JLabel();
        trackOrderBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Item", "Quantity", "Sender", "Receiver", "Status", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 871, 96));

        assignBtn.setBackground(new java.awt.Color(153, 153, 153));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, -1, -1));

        approveOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        approveOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        approveOrderBtn.setText("Approve");
        approveOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderBtnActionPerformed(evt);
            }
        });
        add(approveOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 310, -1, -1));

        refreshBtn.setBackground(new java.awt.Color(153, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 220, -1, -1));

        orderLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        orderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderLabel.setText("Manage Order Approvals");
        add(orderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 861, 41));

        trackOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        trackOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        trackOrderBtn.setText("Track Order");
        trackOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackOrderBtnActionPerformed(evt);
            }
        });
        add(trackOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 110, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        int selectedRow = workRequestTable.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
        OrderRequest orderRequest = (OrderRequest)workRequestTable.getValueAt(selectedRow, 0);
        String orderStatus = orderRequest.getOrderStatus();
        if(orderStatus != "Processed"){
            orderRequest.setOrderReceiver(userAccount);
            orderRequest.setOrderStatus("In Process");
            JOptionPane.showMessageDialog(null, "You have been assigned");
            populateJTable();
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void approveOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderBtnActionPerformed
        int selectedRow = workRequestTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        OrderRequest orderRequest = (OrderRequest)workRequestTable.getValueAt(selectedRow, 0);
        if(orderRequest.getOrderStatus().equals("Processed")){
            JOptionPane.showMessageDialog(null, "Order already Processed!");
            return;
        }
        
        SupplierEnterprise supplier = (SupplierEnterprise) orderRequest.getSupplierEnterprise();
        supplier.getOrganizationList().createOrganization(orderRequest.getType());
        orderRequest.setOrderStatus("Processed");
        JOptionPane.showMessageDialog(null, "Supplier Organization has been created successfully");
        
//            OrderRequest lastRequest = request.getLastOrderRequest();
//            lastRequest.createAndGetNewOrderRequest().setOrderSender(userAccount);
//            lastRequest.createAndGetNewOrderRequest().setOrderStatus("Processed by State, Forwarded to Distributor");
//            
//        for(SupplierEnterprise supplier : stateNetwork.getEnterprises().getSupplierEnterpriseList()){
//            for(Supplier supplier: supplier.getSupplierList().getSupplierList()){
//                if(supplier.equals(request.getSupplier())){
//                    for(VaccineInventory vaccineInventory: supplier.getInventoryDirectory()){
//                        if(vaccineInventory.getVaccine().equals(request.getVaccine())){
//                            if(vaccineInventory.getQuantity()>=request.getQuantity()){
//                                vaccineInventory.setQuantity(vaccineInventory.getQuantity()-request.getQuantity());
//                            }
//                            else{
//                                request.setQuantity(vaccineInventory.getQuantity());
//                                vaccineInventory.setQuantity(0);
//                            }
//                        }
//                    }
//                }
//            }
//        }
//
//        Organization org = null;
//        
//        for(Enterprise enterpris: stateNetwork.getEnterprises().getEnterprises()){
//            if (enterpris instanceof Distributor){
//                for (Organization organizatio : enterpris.getOrganizationList().getOrganizationList()){
//                    if (organizatio instanceof InventoryManagementOrg){
//                        org = organizatio;
//                        break;
//                    }
//                }
//            }
//        }
//        if (org!=null){
//            org.getOrderQueue().getOrderRequests().add(request);
//            userAccount.getOrderQueue().getOrderRequests().add(request);
//        }
//        }
//        else{
//            JOptionPane.showMessageDialog(null,"Please Assign this order to yourself for processing !");
//       }
        populateJTable();
    }//GEN-LAST:event_approveOrderBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateJTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void trackOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackOrderBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row !");
            return;
        }
//        OrderRequest request = (OrderRequest)workRequestJTable.getValueAt(selectedRow, 0);
//        TrackOrderJPanel trackOrderJPanel = new TrackOrderJPanel(userProcessContainer, request);
//        userProcessContainer.add("TrackOrderJPanel", trackOrderJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);

    }//GEN-LAST:event_trackOrderBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveOrderBtn;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton trackOrderBtn;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
