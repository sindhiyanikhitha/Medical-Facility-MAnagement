/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CDCManager;

import Business.Enterprise.CDC;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Pharmacy;
import Business.Network.StateNetwork;
import Business.Order.OrderRequest;
import Business.Organization.CdcOrg;
import Business.Organization.Organization;
import Business.Transport.TransportList;
import Business.UserAccount.UserAccount;

import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import userinterface.Doctor.TrackMyOrdersJPanel;

/**
 * @author Apurva
 */
public class ManageCDCApprovalOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCDCApprovalOrdersJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    CdcOrg cdcOrg;
    StateNetwork stateNetwork;
    CDC cdc;

    public ManageCDCApprovalOrdersJPanel(JPanel userProcessContainer, UserAccount account, CdcOrg cdcOrg, CDC cdc, StateNetwork stateNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.cdcOrg = cdcOrg;
        this.cdc = cdc;
        this.stateNetwork = stateNetwork;
        this.populateEnterpriseTable();
        myOrdersBtn.setVisible(true);
        assignBtn.setVisible(true);
        refreshBtn.setVisible(true);
        approveOrderBtn.setVisible(true);
        autoApproveOrderBtn.setVisible(false);
        trackOrderBtn.setVisible(true);
        enterpriseOrdersBtn.setVisible(false);

    }

    private void populateEnterpriseTable() {

        DefaultTableModel model = (DefaultTableModel) workRequestTable.getModel();
        tableTypeLabel.setText("You are currently viewing all CDC Enterprise orders");
        model.setRowCount(0);
        if (cdc.getOrderQueue() != null) {
            for (OrderRequest request : cdc.getOrderQueue().getOrderRequests()) {
                Object[] row = new Object[5];
                row[0] = request.getVaccine().getVaccineName();
                row[1] = request.getQuantity();
                row[2] = request;
                row[3] = request.getOrderReceiver() == null ? null : request.getOrderReceiver().getEmployee().getEmployeeName();
                row[4] = request.getOrderStatus();

                model.addRow(row);
            }
        }

    }

    private void populateCDCTable() {

        DefaultTableModel model = (DefaultTableModel) workRequestTable.getModel();
        tableTypeLabel.setText("You are currently viewing orders processed by you");
        model.setRowCount(0);
        if (account.getOrderQueue() != null) {
            for (OrderRequest request : account.getOrderQueue().getOrderRequests()) {
                Object[] row = new Object[5];
                row[0] = request;
                row[1] = request.getQuantity();
                row[2] = request.getOrderSender();
                row[3] = request.getOrderReceiver() == null ? null : request.getOrderReceiver().getEmployee().getEmployeeName();
                row[4] = request.getOrderStatus();

                model.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        approveOrderBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        OrderApprovalsLabel = new javax.swing.JLabel();
        trackOrderBtn = new javax.swing.JButton();
        autoApproveOrderBtn = new javax.swing.JButton();
        myOrdersBtn = new javax.swing.JButton();
        enterpriseOrdersBtn = new javax.swing.JButton();
        tableTypeLabel = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Item", "Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 630, 96));

        assignBtn.setBackground(new java.awt.Color(153, 153, 153));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, -1, -1));

        approveOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        approveOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        approveOrderBtn.setText("Approve");
        approveOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderBtnActionPerformed(evt);
            }
        });
        add(approveOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 160, -1));

        refreshBtn.setBackground(new java.awt.Color(153, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 310, -1, -1));

        OrderApprovalsLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        OrderApprovalsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OrderApprovalsLabel.setText("Manage Order Approvals");
        add(OrderApprovalsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 660, 41));

        trackOrderBtn.setBackground(new java.awt.Color(153, 153, 153));
        trackOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        trackOrderBtn.setText("Track Order");
        trackOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackOrderBtnActionPerformed(evt);
            }
        });
        add(trackOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, -1, -1));

        autoApproveOrderBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        autoApproveOrderBtn.setText("Auto Approve");
        autoApproveOrderBtn.setEnabled(false);
        autoApproveOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoApproveOrderBtnActionPerformed(evt);
            }
        });
        add(autoApproveOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 220, -1));

        myOrdersBtn.setBackground(new java.awt.Color(153, 153, 153));
        myOrdersBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        myOrdersBtn.setText("My processed Orders");
        myOrdersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOrdersBtnActionPerformed(evt);
            }
        });
        add(myOrdersBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, -1));

        enterpriseOrdersBtn.setBackground(new java.awt.Color(153, 153, 153));
        enterpriseOrdersBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        enterpriseOrdersBtn.setText("Enterprise Orders");
        enterpriseOrdersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseOrdersBtnActionPerformed(evt);
            }
        });
        add(enterpriseOrdersBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        tableTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableTypeLabel.setText("<Display the table content here>");
        add(tableTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 630, 30));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 110, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed

        int selectedRow = workRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        OrderRequest request = (OrderRequest) workRequestTable.getValueAt(selectedRow, 2);
        if ((request.getOrderStatus().equals("Order Placed")) || (request.getOrderStatus().equals("Assigned to a CDC cdcOrg"))) {
            request.setOrderReceiver(account);

            request.setOrderStatus("Assigned to a CDC cdcOrg");

//            OrderRequest lastRequest = request.getLastOrderRequest();
//            System.out.println("manage");
//            lastRequest.setOrderReceiver(account);
//            lastRequest.setOrderStatus("Assigned to a CDC cdcOrg");


            OrderRequest lastRequest = request.getLastOrderRequest();

            lastRequest.setOrderReceiver(account);
            lastRequest.setOrderStatus("Assigned to a CDC cdcOrg");
        } else {
            JOptionPane.showMessageDialog(null, "This order has not been forwarded to you !");
        }

        populateEnterpriseTable();

    }//GEN-LAST:event_assignBtnActionPerformed

    private void approveOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderBtnActionPerformed

        int selectedRow = workRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }


        OrderRequest orderRequest = (OrderRequest) workRequestTable.getValueAt(selectedRow, 2);
        if ((orderRequest.getOrderReceiver() != null) && (orderRequest.getOrderReceiver().equals(account))) {

            OrderRequest lastRequest = orderRequest.getLastOrderRequest();

            lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
            lastRequest.createAndGetNewOrderRequest().setOrderStatus("Processed by CDC, Forwarded to Pharmacy");

            orderRequest.setOrderStatus("Processed by CDC, Forwarded to Pharmacy");
            orderRequest.setOrderReceiver(null);

            for (Enterprise enterpris : stateNetwork.getEnterpriseList().getEnterpriseList()) {
                if (enterpris instanceof Pharmacy) {

                    enterpris.getOrderQueue().getOrderRequests().add(orderRequest);
                    try {
                        Organization org = TransportList.calculateShortestDistance(enterpris.getOrganizationList(), orderRequest);
                    } catch (Exception ex) {
                        Logger.getLogger(ManageCDCApprovalOrdersJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    account.getOrderQueue().getOrderRequests().add(orderRequest);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please Assign this order to yourself for processing !");
        }

        populateCDCTable();
    }//GEN-LAST:event_approveOrderBtnActionPerformed


    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateEnterpriseTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void trackOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackOrderBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row !");
            return;
        }

        OrderRequest request = (OrderRequest) workRequestTable.getValueAt(selectedRow, 2);

        TrackMyOrdersJPanel trackOrderJPanel = new TrackMyOrdersJPanel(userProcessContainer, request);
        userProcessContainer.add("TrackOrderJPanel", trackOrderJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_trackOrderBtnActionPerformed

    private void autoApproveOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoApproveOrderBtnActionPerformed
        // TODO add your handling code here:

        for (OrderRequest request : cdc.getOrderQueue().getOrderRequests()) {
            String status = request.getOrderStatus();
            if (status.equals("Order Placed")) {
                request.setOrderReceiver(account);
                request.setOrderStatus("Pending CDC Approval");

                OrderRequest lastRequest = request.getLastOrderRequest();

                lastRequest.setOrderReceiver(account);
                lastRequest.setOrderStatus("Pending CDC Approval");
                //lastRequest.createAndGetNewOrderRequest().setOrderSender(account);
                //lastRequest.createAndGetNewOrderRequest().setOrderStatus("Processed by CDC, Forwarded to Pharmacy");

                request.setOrderStatus("Processed by CDC, Forwarded to Pharmacy");

                for (Enterprise enterpris : stateNetwork.getEnterpriseList().getEnterpriseList()) {
                    if (enterpris instanceof Pharmacy) {
                        enterpris.getOrderQueue().getOrderRequests().add(request);
                        account.getOrderQueue().getOrderRequests().add(request);
                    }
                }


            }


        }


    }//GEN-LAST:event_autoApproveOrderBtnActionPerformed

    private void myOrdersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOrdersBtnActionPerformed
        // TODO add your handling code here:
        populateCDCTable();
        myOrdersBtn.setVisible(false);
        assignBtn.setVisible(false);
        refreshBtn.setVisible(false);
        approveOrderBtn.setVisible(false);
        autoApproveOrderBtn.setVisible(false);
        trackOrderBtn.setVisible(true);
        enterpriseOrdersBtn.setVisible(true);

    }//GEN-LAST:event_myOrdersBtnActionPerformed

    private void enterpriseOrdersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseOrdersBtnActionPerformed
        // TODO add your handling code here:
        populateEnterpriseTable();

        myOrdersBtn.setVisible(true);
        assignBtn.setVisible(true);
        refreshBtn.setVisible(true);
        approveOrderBtn.setVisible(true);
        autoApproveOrderBtn.setVisible(false);
        trackOrderBtn.setVisible(true);
        enterpriseOrdersBtn.setVisible(false);


    }//GEN-LAST:event_enterpriseOrdersBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel OrderApprovalsLabel;
    private javax.swing.JButton approveOrderBtn;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton autoApproveOrderBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton enterpriseOrdersBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton myOrdersBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JLabel tableTypeLabel;
    private javax.swing.JButton trackOrderBtn;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
