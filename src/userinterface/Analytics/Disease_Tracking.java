/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Analytics;

import Business.Enterprise.Hospital;
import Business.Network.StateNetwork;
import Business.Order.OrderRequest;
import Business.Organization.ClinicOrg;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * @author HarshithaApurvaNikhitha
 */
public class Disease_Tracking extends javax.swing.JPanel {

    /**
     * Creates new form Disease_Tracking
     */

    JPanel userProcessContainer;
    StateNetwork stateNetwork;

    public Disease_Tracking(JPanel userProcessContainer, StateNetwork stateNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.stateNetwork = stateNetwork;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        diseaseTrackingTable = new javax.swing.JTable();
        diseaseLabel = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        diseaseTrackingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disease", "Vaccine", "Latitiude", "Longitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(diseaseTrackingTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 95, -1, -1));

        diseaseLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        diseaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diseaseLabel.setText("Disease Tracking");
        add(diseaseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 561, 41));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdminRole/click-go-back-button.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 620, 110, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) diseaseTrackingTable.getModel();

        model.setRowCount(0);

        for (Hospital enterprise : stateNetwork.getEnterpriseList().getHospitalEnterpriseList()) {
            if (enterprise.getOrganizationList() != null) {
                for (Organization organization : enterprise.getOrganizationList().getOrganizationList()) {
                    if (organization instanceof ClinicOrg) {
                        for (UserAccount userAccount : organization.getUserAccountList().getUserAccountList()) {
                            if (userAccount.getOrderQueue() != null) {
                                for (OrderRequest request : userAccount.getOrderQueue().getOrderRequests()) {


                                    Object[] row = new Object[4];
                                    row[0] = request.getPatient().getDisease().getDiseaseName();
                                    row[1] = request;
                                    row[2] = request.getDestinationLocationCoordinates().getLatitudeCoordinates();
                                    row[3] = request.getDestinationLocationCoordinates().getLongitudeCoordinates();


                                    model.addRow(row);


                                }
                            }
                        }
                    }
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel diseaseLabel;
    private javax.swing.JTable diseaseTrackingTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
