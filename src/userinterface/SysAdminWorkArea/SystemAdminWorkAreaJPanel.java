/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SysAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import userinterface.Analytics.Request_tracking_Analytics;
import userinterface.Analytics.Time_Lapse;

/**
 *
 * @author HarshithaApurvaNikhitha
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem ecoSystem;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;

        populateJTree();
    }

    public void populateJTree() {
        
        DefaultTreeModel defaultTreeModel = (DefaultTreeModel) SystemJTree.getModel();

        
        ArrayList<CountryNetwork> countryNetworks = ecoSystem.getCountryList();
        List<StateNetwork> stateNetworks;
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;
        CountryNetwork countryNetwork;
        StateNetwork stateNetwork;
        Enterprise enterprise;
        Organization organization;

        DefaultMutableTreeNode countries = new DefaultMutableTreeNode("Countries");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) defaultTreeModel.getRoot();
        root.removeAllChildren();
        root.insert(countries, 0);

        DefaultMutableTreeNode countryTreeNode;
        DefaultMutableTreeNode stateTreeNode;
        DefaultMutableTreeNode enterpriseTreeNode;
        DefaultMutableTreeNode organizationTreeNode;
        for (int i = 0; i < countryNetworks.size(); i++) {
            countryNetwork = countryNetworks.get(i);
            countryTreeNode = new DefaultMutableTreeNode(countryNetwork.getNetworkName());
            countries.insert(countryTreeNode, i);
            stateNetworks = countryNetwork.getStateNetwork();
            for (int l = 0; l < stateNetworks.size(); l++) {
                stateNetwork = stateNetworks.get(l);
                stateTreeNode = new DefaultMutableTreeNode(stateNetwork.getNetworkName());
                countryTreeNode.insert(stateTreeNode, l);
                enterpriseList = stateNetwork.getEnterpriseList().getEnterpriseList();
                for (int j = 0; j < enterpriseList.size(); j++) {
                    enterprise = enterpriseList.get(j);
                    enterpriseTreeNode = new DefaultMutableTreeNode(enterprise.getOrgName());
                    stateTreeNode.insert(enterpriseTreeNode, j);
                    organizationList = enterprise.getOrganizationList().getOrganizationList();
                    for (int k = 0; k < organizationList.size(); k++) {
                        organization = organizationList.get(k);
                        organizationTreeNode = new DefaultMutableTreeNode(organization.getOrgName());
                        enterpriseTreeNode.insert(organizationTreeNode, k);
                    }
                }
            }
        }
        defaultTreeModel.reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        manageStateBtn = new javax.swing.JButton();
        manageAdminBtn = new javax.swing.JButton();
        manageEnterpriseBtn = new javax.swing.JButton();
        selectnodeLabel = new javax.swing.JLabel();
        viewLabel = new javax.swing.JLabel();
        manageCountryBtn = new javax.swing.JButton();
        orderRequestAnalyticsBtn = new javax.swing.JButton();
        monitorTimeLapseBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SystemJTree = new javax.swing.JTree();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(150);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageStateBtn.setBackground(new java.awt.Color(153, 153, 153));
        manageStateBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        manageStateBtn.setText("Add State");
        manageStateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageStateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(manageStateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 310, -1));

        manageAdminBtn.setBackground(new java.awt.Color(153, 153, 153));
        manageAdminBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        manageAdminBtn.setText("Manage Enterprise Admin");
        manageAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageAdminBtnActionPerformed(evt);
            }
        });
        jPanel1.add(manageAdminBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 310, -1));

        manageEnterpriseBtn.setBackground(new java.awt.Color(153, 153, 153));
        manageEnterpriseBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        manageEnterpriseBtn.setText("Manage Enterprise");
        manageEnterpriseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEnterpriseBtnActionPerformed(evt);
            }
        });
        jPanel1.add(manageEnterpriseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 244, 310, -1));

        selectnodeLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        selectnodeLabel.setText("Selected Node:");
        jPanel1.add(selectnodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 36, 160, 40));

        viewLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        viewLabel.setText("<view_selected_node>");
        jPanel1.add(viewLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        manageCountryBtn.setBackground(new java.awt.Color(153, 153, 153));
        manageCountryBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        manageCountryBtn.setText("Add Country");
        manageCountryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCountryBtnActionPerformed(evt);
            }
        });
        jPanel1.add(manageCountryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 98, 310, -1));

        orderRequestAnalyticsBtn.setBackground(new java.awt.Color(153, 153, 153));
        orderRequestAnalyticsBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        orderRequestAnalyticsBtn.setText("Order Request Analytics");
        orderRequestAnalyticsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderRequestAnalyticsBtnActionPerformed(evt);
            }
        });
        jPanel1.add(orderRequestAnalyticsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 310, -1));

        monitorTimeLapseBtn.setBackground(new java.awt.Color(153, 153, 153));
        monitorTimeLapseBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        monitorTimeLapseBtn.setText("Monitor Time Lapse");
        monitorTimeLapseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitorTimeLapseBtnActionPerformed(evt);
            }
        });
        jPanel1.add(monitorTimeLapseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 310, -1));

        jSplitPane1.setRightComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        SystemJTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        SystemJTree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SystemJTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                valueChangedAction(evt);
            }
        });
        jScrollPane1.setViewportView(SystemJTree);

        jPanel2.add(jScrollPane1);

        jSplitPane1.setLeftComponent(jPanel2);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void manageEnterpriseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEnterpriseBtnActionPerformed

        ManageEnterpriseJPanel manageEnterpriseJPanel = new ManageEnterpriseJPanel(userProcessContainer, ecoSystem);
        userProcessContainer.add("manageEnterpriseJPanel", manageEnterpriseJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageEnterpriseBtnActionPerformed

    private void manageAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageAdminBtnActionPerformed
        // TODO add your handling code here:
        ManageEnterpriseAdminJPanel manageEnterpriseAdminJPanel = new ManageEnterpriseAdminJPanel(userProcessContainer, ecoSystem);
        userProcessContainer.add("manageEnterpriseAdminJPanel", manageEnterpriseAdminJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageAdminBtnActionPerformed

    private void manageStateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageStateBtnActionPerformed
        ManageStateJPanel manageStateJPanel = new ManageStateJPanel(userProcessContainer, ecoSystem);
        userProcessContainer.add("manageStateJPanel", manageStateJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageStateBtnActionPerformed

    
    
    private void valueChangedAction(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_valueChangedAction
        DefaultMutableTreeNode selectedTreeNode = (DefaultMutableTreeNode) SystemJTree.getLastSelectedPathComponent();
        if (selectedTreeNode != null) {
            viewLabel.setText(selectedTreeNode.toString());
        }

    }//GEN-LAST:event_valueChangedAction

    private void manageCountryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCountryBtnActionPerformed
        // TODO add your handling code here:
        ManageCountryJPanel manageCountryJPanel = new ManageCountryJPanel(userProcessContainer, ecoSystem);
        userProcessContainer.add("manageCountryJPanel", manageCountryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageCountryBtnActionPerformed

    private void orderRequestAnalyticsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderRequestAnalyticsBtnActionPerformed
        // TODO add your handling code here:
        Request_tracking_Analytics request_tracking_Analytics = new Request_tracking_Analytics(userProcessContainer, ecoSystem);
        userProcessContainer.add("Request_tracking_Analytics", request_tracking_Analytics);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_orderRequestAnalyticsBtnActionPerformed

    private void monitorTimeLapseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitorTimeLapseBtnActionPerformed
        // TODO add your handling code here:
        Time_Lapse time_Lapse = new Time_Lapse(userProcessContainer, ecoSystem);
        userProcessContainer.add("Time_Lapse", time_Lapse);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_monitorTimeLapseBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree SystemJTree;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton manageAdminBtn;
    private javax.swing.JButton manageCountryBtn;
    private javax.swing.JButton manageEnterpriseBtn;
    private javax.swing.JButton manageStateBtn;
    private javax.swing.JButton monitorTimeLapseBtn;
    private javax.swing.JButton orderRequestAnalyticsBtn;
    private javax.swing.JLabel selectnodeLabel;
    private javax.swing.JLabel viewLabel;
    // End of variables declaration//GEN-END:variables
}
